(define (tree->list-1 tree)
	(if (null? tree)
		(list)
		(append (tree->list-1 (left-branch tree))
				(cons (entry tree)
					  (tree->list-1 (right-branch tree))))))
					  
(define (entry tree)        (car tree))
(define (left-branch tree)  (cadr tree))
(define (right-branch tree) (caddr tree))
(define (make-tree entry left right)
	(list entry left right))
	
(define tree1  (make-tree 1 (list) (list)))
(define tree5  (make-tree 5 (list) (list)))
(define tree3  (make-tree 3 tree1 tree5))
(define tree11 (make-tree 11 (list) (list)))
(define tree9  (make-tree 9 (list) tree11))
(define tree7  (make-tree 7 tree3 tree9))