(define (yachts)
    (let ((gabrielle (amb 'moore 'downing 'hall 'barnacle 'parker))
          (lorna     (amb 'moore 'downing 'hall 'barnacle 'parker))
          (rosalind  (amb 'moore 'downing 'hall 'barnacle 'parker))
          (melissa   (amb 'moore 'downing 'hall 'barnacle 'parker))
          (maryann   (amb 'moore 'downing 'hall 'barnacle 'parker)))
      (require (not (eq? gabrielle 'barnacle)))
      (require (not (eq? lorna 'moore)))
      (require (not (eq? rosalind 'hall)))
      (require (eq? melissa 'barnacle))
      (require (eq? maryann 'moore))
      (require 
        (cond ((eq? gabrielle 'moore) (eq? lorna 'parker))
              ((eq? gabrielle 'downing) (eq? melissa 'parker))
              ((eq? gabrielle 'hall) (eq? rosalind 'parker))
              (else false)))
      (require 
        (distinct? (list gabrielle lorna rosalind melissa maryann)))
      (list (list 'gabrielle gabrielle)
            (list 'lorna lorna)
            (list 'rosalind rosalind)
            (list 'melissa melissa)
            (list 'maryann maryann))))

(define (require p)
    (if (not p) (amb)))

(define (distinct? items)
    (cond ((null? items) true)
          ((null? (cdr items)) true)
          ((member (car items) (cdr items)) false)
          (else (distinct? (cdr items)))))

(yachts)