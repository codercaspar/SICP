;;; Starting a new problem: 
;;; Amb-Eval value:
(sentence 
	(simple-noun-phrase 
		(article the) 
		(noun professor)) 
	(verb-phrase 
		(verb lectures) 
		(prep-phrase 
			(prep to) 
			(noun-phrase 
				(noun-phrase 
					(simple-noun-phrase 
						(article the) 
						(noun student)) 
					(prep-phrase 
						(prep in) 
						(simple-noun-phrase 
							(article the) 
							(noun class)))) 
				(prep-phrase 
					(prep with) 
					(simple-noun-phrase 
						(article the) 
						(noun cat)))))))

;;; Amb-Eval input:
try-again

;;; Amb-Eval value:
(sentence 
	(simple-noun-phrase 
		(article the) 
		(noun professor)) 
	(verb-phrase 
		(verb lectures) 
		(prep-phrase 
			(prep to) 
			(noun-phrase 
				(simple-noun-phrase 
					(article the) 
					(noun student)) 
				(prep-phrase 
					(prep in) 
					(noun-phrase 
						(simple-noun-phrase 
							(article the) 
							(noun class)) 
					(prep-phrase 
						(prep with) 
							(simple-noun-phrase 
								(article the) 
								(noun cat)))))))))

;;; Amb-Eval input:

try-again

;;; Amb-Eval value:
(sentence 
	(simple-noun-phrase 
		(article the) 
		(noun professor)) 
	(verb-phrase 
		(verb-phrase 
			(verb lectures) 
			(prep-phrase 
				(prep to) 
				(simple-noun-phrase 
					(article the) 
					(noun student)))) 
		(prep-phrase 
			(prep in) 
			(noun-phrase 
				(simple-noun-phrase 
					(article the) 
					(noun class)) 
				(prep-phrase 
					(prep with) 
					(simple-noun-phrase 
						(article the) 
						(noun cat)))))))

;;; Amb-Eval input:
try-again

;;; Amb-Eval value:
(sentence 
	(simple-noun-phrase 
		(article the) 
		(noun professor)) 
	(verb-phrase 
		(verb-phrase 
			(verb lectures) 
			(prep-phrase 
				(prep to) 
				(noun-phrase 
					(simple-noun-phrase 
						(article the) 
						(noun student)) 
					(prep-phrase 
						(prep in) 
						(simple-noun-phrase 
							(article the) 
							(noun class)))))) 
		(prep-phrase 
			(prep with) 
			(simple-noun-phrase 
				(article the) 
				(noun cat)))))

;;; Amb-Eval input:
try-again

;;; Amb-Eval value:
(sentence 
	(simple-noun-phrase 
		(article the) 
		(noun professor)) 
	(verb-phrase 
		(verb-phrase 
			(verb-phrase 
				(verb lectures) 
				(prep-phrase 
					(prep to) 
					(simple-noun-phrase 
						(article the) 
						(noun student)))) 
			(prep-phrase 
				(prep in) 
				(simple-noun-phrase 
					(article the) 
					(noun class)))) 
		(prep-phrase 
			(prep with) 
			(simple-noun-phrase 
				(article the) 
				(noun cat)))))

then the program will loop forever!!!

so this method do not work.

so eli bendersky is wrong in this exercise!

because 

(define (parse-verb-phrase)
	(amb 
		(parse-word verbs)
		(list 'verb-phrase
			(parse-verb-phrase)
			(parse-prepositional-phrase))))

when (parse-word verbs) failed ,then the program will loop forever

in 4.45 this problem won't happen.

(define (parse-verb-phrase)
	(define (maybe-extend verb-phrase)
		(amb verb-phrase (maybe-extend 
							(list 'verb-phrase 
								verb-phrase
								(parse-prepositional-phrase)))))
	(maybe-extend (parse-word verbs)))

when (parse-word verbs) failed,it return upper level.