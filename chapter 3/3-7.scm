(define (make-account balance password)
	(define (with-draw amount)
		(if (>= balance amount)
			(begin (set! balance (- balance amount))
					balance)
			"Insufficient fund"))
	(define (deposit amount)
		(set! balance (+ balance amount))
		balance)
	(define (joint append-pwd)
		(set! password (append password (list append-pwd))))
	(define (dispatch m p)
		(cond ((not (member p password)) (lambda (x) "Incorrect password"))
			  ((eq? m 'withdraw) with-draw)
			  ((eq? m 'deposit) deposit)
			  ((eq? m 'joint) joint)
			  (else (lambda (x) "Unknown request"))))
	dispatch)
	
(define (make-joint account old-pwd append-pwd)
	((account 'joint old-pwd) append-pwd)
	account)
	
(define peter-acc (make-account 100  (list "123")))
((peter-acc 'withdraw "123") 10)
((peter-acc 'deposit "456") 10)
(define paul-acc
	(make-joint peter-acc "123" "456"))
((paul-acc 'withdraw "456") 10)
((paul-acc 'withdraw "123") 10)